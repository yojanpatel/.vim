snippet #!
	#!/usr/bin/env python

snippet imp
	import ${1:module}

snippet wh
	while ${1:condition}:
	  ${2:# code...}

snippet for
	for ${1:needle} in ${2:haystack}:
	  ${3:# code...}

# New Class
snippet cl
	class ${1:ClassName}(${2:object}):
	  ""${3:docstring for $1}""
	  def __init__(self, ${4:arg}):
	    ${5:super($1, self).__init__()}
	    self.$4 = $4
	    ${6}"

# Lambda
snippet ld
	${1:var} = lambda ${2:vars} : ${3:action}

snippet .
	self.
snippet try Try/Except
	try:
	  ${1:pass}
	except ${2:Exception}, ${3:e}:
	  ${4:raise $3}
snippet try Try/Except/Else
	try:
	  ${1:pass}
	  except ${2:Exception}, ${3:e}:
	  ${4:raise $3}
	else:
	  ${5:pass}

snippet try Try/Except/Finally
	try:
	  ${1:pass}
	except ${2:Exception}, ${3:e}:
	  ${4:raise $3}
	finally:
	  ${5:pass}

snippet try Try/Except/Else/Finally
	try:
	  ${1:pass}
	exceptt ${2:Exception}, ${3:e}:
	  ${4:raise $3}
	else:
	  ${5:pass}
	finally:
	  ${6:pass}
